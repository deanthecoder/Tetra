#
# Mandelbrot fractal
#
# RGB formula by Inigo Quilez (https://iquilezles.org/articles/palettes/)
#
    call main
    halt
    
main:
    ld $cRe, $fragCoord[0]
    ld $cIm, $fragCoord[1]
    
    # scale = initialScale * exp(-rate * iTime)
    ld $t, $iTime
    div $t, 30.0
    mul $t, 6.28318
    cos $t, $t
    mul $t, -0.5
    add $t, 0.5
    mul $t, 30.0
    mul $t, 0.2             # rate = 0.2
    neg $t                  # negative time for decay
    exp $scale, $t
    mul $scale, 2.5         # initial zoom (starting from scale 2.5)
    
    # Convert pixel to complex number (centered on screen, zoomed out)
    div $cRe, $iResolution[0]
    sub $cRe, 0.5
    mul $cRe, $scale
    add $cRe, 0.5
    sub $cRe, 1.245              # pan X
    
    div $cIm, $iResolution[1]
    sub $cIm, 0.5
    mul $cIm, $scale
    add $cIm, 0.5
    sub $cIm, 0.395              # pan Y
    
    # Initialize z = 0 + 0i
    ld $zRe, 0
    ld $zIm, 0
    
    ld $i, 0
    ld $maxIter, 100.0

loop:
    # z = z² + c
    # zRe² - zIm² + cRe
    ld $zr2, $zRe
    mul $zr2, $zRe

    ld $zi2, $zIm
    mul $zi2, $zIm

    ld $zNewRe, $zr2
    sub $zNewRe, $zi2
    add $zNewRe, $cRe

    # 2 * zRe * zIm + cIm
    ld $zNewIm, $zRe
    mul $zNewIm, $zIm
    mul $zNewIm, 2
    add $zNewIm, $cIm

    # Update z
    ld $zRe, $zNewRe
    ld $zIm, $zNewIm

    # if (zRe² + zIm² > 4) break;
    ld $mag2, $zr2
    add $mag2, $zi2
    ld $c, $mag2
    gt $c, 4
    jmpnz $c, end

    # i++
    inc $i
    ld $c, $i
    lt $c, $maxIter
    jmpnz $c, loop

end:
    ld $arg0, $i
    call calc_rgb
    ret $retval
    
calc_rgb:
    # t = normalized iteration count
    ld $t, $arg0
    div $t, $maxIter         # normalize 0..1
    pow $t, 0.45             # gamma
    
    # Color Constants
    ld $a, 0.5
    ld $b, 0.5
    ld $c, 1.0
    ld $d, 0.00, 0.10, 0.20
    
    # Create vec3 of t repeated for RGB
    ld $rgb, $t
    
    # Apply c * t
    mul $rgb, $c
    
    # Add phase offsets d
    add $rgb, $d
    
    # Multiply by 2π
    mul $rgb, 6.28318         # 2π
    
    # Apply cosine
    cos $rgb, $rgb
    
    # Apply a, b
    mul $rgb, $b
    add $rgb, $a
    
    ret $rgb
